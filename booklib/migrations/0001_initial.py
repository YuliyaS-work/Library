# Generated by Django 5.2.5 on 2025-09-05 23:46

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_rus', models.CharField(max_length=200, verbose_name='Наименование книги')),
                ('title_orig', models.CharField(blank=True, max_length=200, null=True, verbose_name='Наименование книги (ориг.)')),
                ('year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год издания')),
                ('quantity_pages', models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество страниц')),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True, verbose_name='Общий рейтинг')),
                ('counter_rating', models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=2, null=True, verbose_name='Счетчик рейтинга')),
                ('return_rating', models.DecimalField(blank=True, choices=[(5, '5'), (4, '4'), (3, '3'), (2, '2'), (1, '★')], decimal_places=1, max_digits=2, null=True, verbose_name='Рейтинг при возврате')),
                ('general_quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='Общее количество экземпляров')),
                ('current_quantity', models.IntegerField(blank=True, null=True, verbose_name='Доступное количество экземпляров')),
                ('distrib_quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количество выданных экземпляров')),
            ],
            options={
                'verbose_name': 'Книга',
                'verbose_name_plural': 'Книги',
                'ordering': ['current_quantity', 'title_rus'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_genre', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Введите только буквы.', regex='^[A-Za-zА-Яа-яЁё]+$')], verbose_name='Жанр')),
            ],
            options={
                'verbose_name': 'Жанр книги',
                'verbose_name_plural': 'Жанры книг',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Введите только буквы.', regex='^[A-Za-zА-Яа-яЁё]+$')], verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Введите только буквы.', regex='^[A-Za-zА-Яа-яЁё]+$')], verbose_name='Имя')),
                ('surname', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Введите только буквы.', regex='^[A-Za-zА-Яа-яЁё]+$')], verbose_name='Отчество')),
                ('passport', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Номер паспорта')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Адрес проживания')),
                ('mail', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('agreement', models.BooleanField(default=True, verbose_name='Соглашение')),
                ('status_person', models.BooleanField(default=False, verbose_name='Статус читателя')),
                ('debt', models.DecimalField(decimal_places=2, default=0, max_digits=7, verbose_name='Задолженность читателя')),
                ('quantity_books', models.PositiveIntegerField(default=0, verbose_name='Выданные книги')),
            ],
            options={
                'verbose_name': 'Читатель',
                'verbose_name_plural': 'Читатели',
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Введите только буквы.', regex='^[A-Za-zА-Яа-яЁё]+$')], verbose_name='Автор')),
                ('photo_author', models.ImageField(blank=True, null=True, upload_to='photo_author/', verbose_name='Фото авторов')),
                ('books', models.ManyToManyField(to='booklib.book')),
            ],
            options={
                'verbose_name': 'Автор книги',
                'verbose_name_plural': 'Авторы книг',
            },
        ),
        migrations.CreateModel(
            name='BookObj',
            fields=[
                ('registr_number', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Регистрационный номер')),
                ('registr_date', models.DateField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Стоимость')),
                ('price_per_day', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Цена за день')),
                ('current_day_price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Текущая цена за день')),
                ('coefficient', models.DecimalField(blank=True, choices=[(1, 'отличное'), (0.8, 'хорошее'), (0.6, 'удовлетворительное'), (0.4, 'неудовлетворительное'), (0.2, 'списание')], decimal_places=1, default=1, max_digits=2, null=True, verbose_name='Коэффициент')),
                ('space', models.CharField(blank=True, max_length=200, null=True, verbose_name='Место хранения')),
                ('status_book', models.BooleanField(default=False, verbose_name='Статус книги')),
                ('mark', models.BooleanField(default=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='booklib.book', verbose_name='Книга')),
            ],
            options={
                'verbose_name': 'Экземпляр книги',
                'verbose_name_plural': 'Экземпляры книг',
            },
        ),
        migrations.CreateModel(
            name='FotoRegistr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_book', models.ImageField(upload_to='photo_book/', verbose_name='Фото обложки')),
                ('books', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='booklib.book')),
            ],
            options={
                'verbose_name': 'Фотография обложки книги',
                'verbose_name_plural': 'Фотографии обложки книг',
            },
        ),
        migrations.CreateModel(
            name='FotoStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_status', models.ImageField(blank=True, null=True, upload_to='photo_status/', verbose_name='Фото состояния книги')),
                ('list_status', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Описание')),
                ('book_obj', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='booklib.bookobj')),
            ],
            options={
                'verbose_name': 'Текущее состояние книги',
                'verbose_name_plural': 'Текущие состояния книги',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='genres',
            field=models.ManyToManyField(to='booklib.genre'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distrib_date', models.DateField(verbose_name='Дата выдачи')),
                ('pre_return_date', models.DateField(verbose_name='Дата возврата')),
                ('pre_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Предварительная стоимость')),
                ('quantity_books', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Количество выданных книг')),
                ('debt_order', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Задолженность по выдаче')),
                ('status_order', models.BooleanField(default=False, verbose_name='Наличие задолженности')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Скидка')),
                ('mark', models.BooleanField(default=False)),
                ('book_obj', models.ManyToManyField(to='booklib.bookobj', verbose_name='Книга для выдачи')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='booklib.person', verbose_name='Получатель книги')),
            ],
            options={
                'verbose_name': 'Ордер',
                'verbose_name_plural': 'Ордера',
            },
        ),
        migrations.CreateModel(
            name='ReturnB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_date', models.DateField(auto_now=True, null=True, verbose_name='Дата возврата')),
                ('return_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Стоимость возврата')),
                ('quantity_book', models.PositiveIntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], null=True, verbose_name='Количество выданных книг')),
                ('mark', models.BooleanField(default=False)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booklib.order', verbose_name='Выдача')),
            ],
            options={
                'verbose_name': 'Возврат',
                'verbose_name_plural': 'Возвраты',
            },
        ),
        migrations.AddField(
            model_name='bookobj',
            name='return_order',
            field=models.ManyToManyField(to='booklib.returnb', verbose_name='Книги возврата'),
        ),
    ]
